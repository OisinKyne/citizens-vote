{"version":3,"sources":["static/ethereum-metamask-chrome.png","withRoot.js","logger/winston.js","OnboardingComponent/OnboardingComponent.tsx","BillComponent/BillComponent.tsx","ListComponent/ListComponent.tsx","OireachtasService/oireachtas.ts","CastVoteModalComponent/CastVoteModalComponent.tsx","BlockchainService/blockchainService.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","theme","createMuiTheme","palette","primary","light","cyan","main","dark","secondary","blueGrey","typography","useNextVariants","withRoot","Component","props","react_default","a","createElement","MuiThemeProvider","CssBaseline","logger","createLogger","level","format","combine","timestamp","splat","json","defaultMeta","service","transports","Console","simple","OnboardingComponent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","open","web3Injected","info","className","Grid","container","direction","spacing","alignContent","alignItems","item","xs","href","target","rel","src","MetaMaskLogo","alt","Typography","variant","gutterBottom","React","BillComponent","e","triggerVoteCast","bill","billPdfUrl","versions","length","version","formats","pdf","uri","Paper","justify","shortTitleEn","longTitleEn","mostRecentStage","event","chamber","showAs","onClick","startCastVoteFor","bind","ThumbUp","startCastVoteAgainst","ThumbDown","ListComponent","billItems","bills","updateBills","then","map","index","src_BillComponent_BillComponent","key","setState","objectSpread","Oireachtas","url","Promise","resolve","reject","require","rp","htmlString","JSON","parse","catch","error","bill_status","arguments","undefined","date_start","date_end","result_limit","chamber_id","language","concat","CastVoteModalComponent","inFavour","name","email","_this2","Dialog","onEnter","setTaNilTab","onClose","handleClose","aria-labelledby","DialogTitle","id","DialogContent","square","Tabs","value","onChange","change","newValue","indicatorColor","textColor","Tab","icon","label","DialogContentText","DialogActions","Button","color","castVote","HowToVoteOutlined","BlockchainService","web3","getWeb3","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","window","ethereum","Web3","enable","sent","eth","defaultAccount","t0","currentProvider","warn","stop","_x","_x2","apply","networkName","contractAddresses","rinkeby","address","Error","billUri","net","getNetworkType","contractAddress","getVoteContractAddress","Contract","voteContractAbi","defaultGasPrice","methods","vote","send","from","receipt","err","App","reason","castVoteModalOpen","castVoteResponse","console","log","isWeb3User","isWeb3Injected","handleClick","billToVoteOn","oireachtasService","date","Date","date7DaysAgoString","getTime","toISOString","substring","date14DaysFromNowString","billsApiRequestUrl","prepareDailBillsRequestUrl","getDailBills","results","result","src_CastVoteModalComponent_CastVoteModalComponent","src_OnboardingComponent_OnboardingComponent","src_ListComponent_ListComponent","triggerCastVoteModal","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24a0f850.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ethereum-metamask-chrome.79226bac.png\";","import React from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport cyan from \"@material-ui/core/colors/cyan\";\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: cyan[500],\n      main: cyan[700],\n      dark: cyan[900]\n    },\n    secondary: {\n      light: blueGrey[300],\n      main: blueGrey[500],\n      dark: blueGrey[700]\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;\n","import { createLogger, format, transports } from \"winston\";\n\nconst logger = createLogger({\n  level: \"info\",\n  format: format.combine(\n    format.timestamp({\n      format: \"YYYY-MM-DD HH:mm:ss\"\n    }),\n    format.splat(),\n    format.json()\n  ),\n  defaultMeta: { service: \"citizens-vote-ui\" },\n  transports: [\n    new transports.Console({\n      format: format.simple(),\n      level: \"warn\"\n    })\n  ]\n});\n\n//\n// If we're not in production then **ALSO** log to the `console`\n// with the colorized simple format.\n//\nif (process.env.NODE_ENV !== \"production\") {\n  logger.add(\n    new transports.Console({\n      format: format.combine(format.colorize(), format.simple())\n    })\n  );\n}\n\nexport default logger;\n","import React from \"react\";\nimport withRoot from \"../withRoot\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport MetaMaskLogo from \"../static/ethereum-metamask-chrome.png\";\nimport logger from \"../logger/winston\";\n\nclass OnboardingComponent extends React.Component {\n  state = { open: true };\n\n  constructor(props: any) {\n    super(props);\n\n    if (props.web3Injected === true) {\n      logger.info(\"Web3 is injected into this Onboarding object.\");\n      this.state = { open: false };\n    }\n  }\n\n  render() {\n    if (this.state.open === false) {\n      return null;\n    }\n    return (\n      <div className={\"onboardingDiv\"}>\n        <Grid\n          container\n          direction={\"column\"}\n          spacing={3}\n          alignContent={\"center\"}\n          alignItems={\"center\"}\n        >\n          <Grid item xs={12}>\n            <a\n              href=\"https://metamask.io/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className={\"metaMaskUrl\"}\n            >\n              <img\n                src={MetaMaskLogo}\n                className={\"fullWidthImage\"}\n                alt=\"MetaMask Fox Logo\"\n              />\n            </a>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"body1\" gutterBottom>\n              You need to install{\" \"}\n              <a\n                href=\"https://metamask.io/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className={\"metaMaskUrl\"}\n              >\n                MetaMask\n              </a>{\" \"}\n              to post messages to the Ethereum blockchain.\n            </Typography>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRoot(OnboardingComponent);\n","import React from \"react\";\nimport Bill from \"../OireachtasService/interfaces/iBill\";\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\nimport { ThumbUp, ThumbDown } from \"@material-ui/icons\";\n\ninterface Props {\n  key: number;\n  bill: Bill;\n  triggerVoteCast: Function;\n}\ninterface State {\n  bill: Bill;\n}\n/**\n * Component to render a passed Bill interface conforming JSON object to a React Component with buttons for voting for and against bills.\n */\nclass BillComponent extends React.Component<Props, State> {\n  startCastVoteFor(e: any) {\n    this.props.triggerVoteCast(this.props.bill, true);\n  }\n\n  startCastVoteAgainst(e: any) {\n    this.props.triggerVoteCast(this.props.bill, false);\n  }\n\n  render() {\n    let billPdfUrl = \"/\";\n    if (this.props.bill.versions && this.props.bill.versions.length >= 1) {\n      billPdfUrl = this.props.bill.versions[0].version.formats.pdf.uri;\n    }\n    return (\n      <Grid item xs={12}>\n        <Paper className={\"billPaper\"}>\n          <Grid container justify=\"space-between\" alignItems=\"center\">\n            <Grid item xs={10}>\n              <Typography variant=\"h6\" gutterBottom>\n                {this.props.bill.shortTitleEn}\n              </Typography>\n              <Typography variant=\"body1\" gutterBottom>\n                {this.props.bill.longTitleEn}\n              </Typography>\n              <Grid\n                container\n                justify=\"space-between\"\n                alignItems=\"flex-end\"\n                alignContent=\"center\"\n                className={\"billInfoGrid\"}\n              >\n                <Grid item>\n                  <Typography variant=\"body1\">\n                    <b>Read Bill:</b>{\" \"}\n                    <a\n                      href={billPdfUrl}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className={\"billPdfUrl\"}\n                    >\n                      PDF\n                    </a>\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"body1\">\n                    {/* Print the current house */}\n                    <b>House:</b>{\" \"}\n                    <a\n                      href={this.props.bill.mostRecentStage.event.chamber.uri}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className={\"billPdfUrl\"}\n                    >\n                      {!!this.props.bill.mostRecentStage.event.chamber.showAs\n                        ? this.props.bill.mostRecentStage.event.chamber.showAs\n                        : \"-\"}\n                    </a>\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"body1\">\n                    {/* Print the current stage */}\n                    <b>Stage:</b>{\" \"}\n                    <a\n                      href={this.props.bill.mostRecentStage.event.uri}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className={\"billPdfUrl\"}\n                    >\n                      {!!this.props.bill.mostRecentStage.event.showAs\n                        ? this.props.bill.mostRecentStage.event.showAs\n                        : \"-\"}\n                    </a>\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={2}>\n              <Grid container justify=\"space-around\" alignItems=\"center\">\n                <Grid item onClick={this.startCastVoteFor.bind(this)}>\n                  <ThumbUp />\n                  <Typography>Tá</Typography>\n                </Grid>\n                <Grid item onClick={this.startCastVoteAgainst.bind(this)}>\n                  <ThumbDown />\n                  <Typography>Níl</Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    );\n  }\n}\n\nexport default BillComponent;\n","import React from \"react\";\nimport Bill from \"../OireachtasService/interfaces/iBill\";\nimport BillComponent from \"../BillComponent/BillComponent\";\nimport { Grid, Typography } from \"@material-ui/core\";\n\ninterface Props {\n  updateBills: Function;\n  triggerVoteCast: Function;\n}\ninterface State {\n  bills: Bill[];\n}\nclass ListComponent extends React.Component<Props, State> {\n  // React element BillComponents outputted from a map.\n  public billItems: any = [];\n\n  constructor(props: any) {\n    super(props);\n    this.state = { bills: [] };\n\n    this.props.updateBills().then((bills: Bill[]) => {\n      if (bills && bills.map) {\n        this.billItems = bills.map((bill: Bill, index: number) => (\n          <BillComponent\n            bill={bill}\n            key={index}\n            triggerVoteCast={this.props.triggerVoteCast}\n          />\n        ));\n        this.setState({ ...this.state, bills });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Typography variant=\"h4\" gutterBottom>\n          {this.billItems.length} Dáil Bills\n        </Typography>\n        <div>\n          <Grid container={true} direction=\"column\" spacing={3}>\n            {this.billItems}\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ListComponent;\n","import APIResponse from \"./interfaces/iAPIResponse\";\n// import defaultApiResponse from \"./defaultApiResponse.json\";\n\nexport default class Oireachtas {\n  /**\n   * Get the current bills in the Dail.\n   *\n   * url: The formulated API request for api.oireachtas.ie\n   *\n   * Returns a promise that resolves to the request body as text. Rejects if there is an error.\n   */\n  public async getDailBills(url: string): Promise<APIResponse> {\n    return new Promise(function(resolve, reject) {\n      var rp = require(\"request-promise-native\");\n      rp(url)\n        .then((htmlString: string) => {\n          resolve(JSON.parse(htmlString));\n        })\n        .catch((error: any) => {\n          reject(error);\n        });\n\n      //No internet workaround.\n      // resolve(defaultApiResponse);\n    });\n  }\n\n  public prepareDailBillsRequestUrl(\n    bill_status = \"Current\",\n    date_start = \"2019-05-01\",\n    date_end = \"2019-06-08\",\n    result_limit = \"50\",\n    chamber_id = \"\",\n    language = \"en\"\n  ) {\n    return `https://api.oireachtas.ie/v1/legislation?bill_status=${bill_status}&bill_source=Government,Private%20Member&date_start=${date_start}&date_end=${date_end}&limit=${result_limit}&chamber_id=${chamber_id}&lang=${language}`;\n  }\n}\n","import React from \"react\";\nimport Bill from \"../OireachtasService/interfaces/iBill\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n  Paper,\n  Tabs,\n  Tab\n} from \"@material-ui/core\";\nimport logger from \"../logger/winston\";\nimport { HowToVoteOutlined, ThumbDown, ThumbUp } from \"@material-ui/icons\";\ninterface Props {\n  // Whether dialog should render\n  open: boolean;\n  // Bill to vote on\n  bill: Bill | undefined;\n  // Whether this modal should launch leaning infavour/against bill\n  inFavour: boolean;\n  // Function to close modal without casting vote\n  handleClose: any;\n  // Function to cast vote\n  castVote: any;\n}\ninterface State {\n  inFavour: boolean;\n  name: string;\n  email: string;\n}\n/**\n * Component to present a user with a summary of their vote\n */\nclass CastVoteModalComponent extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = { inFavour: this.props.inFavour, name: \"\", email: \"\" };\n  }\n\n  /**\n   * Function called when the Dialog component fires onEnter callback.\n   * Reads props.inFavour and overrides state.inFavour if necessary.\n   */\n  setTaNilTab() {\n    this.setState({ ...this.state, inFavour: this.props.inFavour });\n  }\n  render() {\n    if (!this.props.bill) {\n      logger.info(\n        \"Not rendering without a bill object passed as a prop to CastVoteModal. \"\n      );\n      return <div />;\n    } else {\n      return (\n        <Dialog\n          open={this.props.open}\n          onEnter={this.setTaNilTab.bind(this)}\n          onClose={this.props.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">\n            {this.props.bill.shortTitleEn}\n          </DialogTitle>\n          <DialogContent>\n            <Paper square className={\"voteModalTabPaperComponent\"}>\n              <Tabs\n                value={this.state.inFavour ? 0 : 1}\n                onChange={(change: any, newValue: number) => {\n                  // This field is Set to 1 if they vote Níl\n                  // This field is set to 0 if they want Tá\n                  // Update state accordingly.\n                  if (newValue === 1) {\n                    this.setState({\n                      ...this.state,\n                      inFavour: false\n                    });\n                  } else {\n                    this.setState({\n                      ...this.state,\n                      inFavour: true\n                    });\n                  }\n                }}\n                variant=\"fullWidth\"\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n              >\n                <Tab icon={<ThumbUp />} label=\"Tá\" />\n                <Tab icon={<ThumbDown />} label=\"Níl\" />\n              </Tabs>\n            </Paper>\n            <DialogContentText>\n              You are going to cast your vote <b>{this.state.inFavour ? 'for' : 'against'}</b> this measure. \n            </DialogContentText>\n            <DialogContentText>\n              {this.props.bill.longTitleEn}\n            </DialogContentText>\n            {/* Taking out name and email address for now. There are more modern ways to prove an Ethereum Address. \n            \n            <DialogContentText>\n              You have the option to add your name or your email to your vote,\n              but keep in mind this is being cast forever to the Blockchain.\n            </DialogContentText>\n            <TextField\n              margin=\"dense\"\n              id=\"name\"\n              value={this.state.name}\n              onChange={(e: any) => {\n                this.setState({ ...this.state, name: e.target.value });\n              }}\n              label=\"Name\"\n              type=\"text\"\n              fullWidth\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"email\"\n              value={this.state.email}\n              onChange={(e: any) => {\n                this.setState({ ...this.state, email: e.target.value });\n              }}\n              label=\"Email\"\n              type=\"email\"\n              fullWidth\n            />*/}\n          </DialogContent> \n          <DialogActions>\n            <Button\n              onClick={this.props.handleClose}\n              color=\"primary\"\n              variant={\"contained\"}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant={\"contained\"}\n              onClick={() => {\n                this.props.castVote(\n                  this.props.bill,\n                  this.state.inFavour,\n                  this.state.name,\n                  this.state.email\n                );\n              }}\n              color=\"primary\"\n            >\n              Cast Vote\n              {/* Vote Icon */}\n              <HowToVoteOutlined />\n            </Button>\n          </DialogActions>\n        </Dialog>\n      );\n    }\n  }\n}\n\nexport default CastVoteModalComponent;\n","import Web3 from \"web3\";\nimport React from \"react\";\nimport logger from \"../logger/winston\";\nimport voteContractAbi from \"../Contracts/NationalVote.abi.json\";\nimport contractAddresses from \"../Contracts/ContractAddresses.json\";\n\n// Stop typescript complaining about the window definition not having ethereum or web3 in it\ndeclare let window: any; // <--- Declare it like this\n\n/**\n * Service for sending/getting messages from the Blockchain\n *\n *\n */\ninterface Props {}\ninterface State {\n  web3: any;\n}\n/**\n * Class for interacting with the Blockchain\n */\nexport default class BlockchainService extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = { web3: this.getWeb3() };\n  }\n\n  /**\n   * Function to check whether there's an injected web3 in this browser.\n   * Returns boolean\n   */\n  public static isWeb3Injected(): boolean {\n    // Modern dapp browsers\n    if (window.ethereum) {\n      logger.info(\"Window.ethereum provided\");\n      return true;\n    }\n    // Legacy dapp browsers\n    else if (window.web3) {\n      logger.info(\"Window.web3 provided\");\n      return true;\n    }\n    // Non-dapp browsers\n    else {\n      logger.warn(\"No web3 provider detected\");\n      return false;\n    }\n  }\n\n  // Function to return the injected web3 object supplied by Metamask.\n  public async getWeb3(): Promise<Web3> {\n    return new Promise(async function(resolve, reject) {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        logger.info(\"Window.ethereum provided\");\n        window.web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          const response = await window.ethereum.enable();\n          if (response.length >= 1)\n            window.web3.eth.defaultAccount = response[0];\n          resolve(window.web3);\n        } catch (error) {\n          logger.error(\n            \"Calling window.ethereum.enable() threw an error. Something is probably wrong. \"\n          );\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        logger.info(\"Window.web3 provided\");\n        window.web3 = new Web3(window.web3.currentProvider);\n        // Acccounts always exposed\n        resolve(window.web3);\n      }\n      // Non-dapp browsers...\n      else {\n        logger.warn(\"No web3 provider detected\");\n        reject(\"No web3 provider detected\");\n      }\n    });\n  }\n\n  // Function that looks up ContractAddresses.json and returns the address of the vote contract on that network.\n  public getVoteContractAddress(networkName: \"main\" | \"rinkeby\"): string {\n    if (networkName === \"rinkeby\") return contractAddresses.rinkeby.address;\n    else if (networkName === \"main\") {\n      return contractAddresses.main.address;\n    } else {\n      throw new Error(\"Unknown ethereum network name\");\n    }\n  }\n\n  public async castVote(billUri: string, inFavour: boolean) {\n    const web3 = await this.state.web3;\n    const networkName = await web3.eth.net.getNetworkType();\n    const contractAddress = this.getVoteContractAddress(networkName);\n\n    if (!web3.eth.defaultAccount) {\n      // There is no default account set. For now just fail as it is likely something has gone wrong.\n      throw new Error(\n        \"No web3.eth.defaultAccount available. Something went wrong. \"\n      );\n    }\n\n    return new Promise(function(resolve, reject) {\n      // Rinkeby contract address 0xc9f0ceebfa12ec7828245375cfb634bd387bbee7\n      try {\n        if (web3) {\n          const voteContract = new web3.eth.Contract(\n            voteContractAbi,\n            contractAddress,\n            {\n              defaultGasPrice: 20000000000\n            }\n          );\n\n          voteContract.methods\n            .vote(billUri, inFavour)\n            .send({ from: web3.eth.defaultAccount })\n            .then((receipt: any) => {\n              resolve(receipt);\n            })\n            .catch((err: any) => {\n              reject(err);\n            });\n        }\n      } catch (error) {\n        logger.error(\n          \"Something went wrong casting a vote. Rejecting with the error. \"\n        );\n        reject(error);\n      }\n    });\n  }\n\n  // Function to prepare a JSON string for broadcasting to the blockchain.\n  public prepareMessage(\n    bill_status = \"Current\",\n    date_start = \"2019-05-01\",\n    date_end = \"2019-06-08\",\n    result_limit = \"50\",\n    chamber_id = \"\",\n    language = \"en\"\n  ) {\n    return `https://api.oireachtas.ie/v1/legislation?bill_status=${bill_status}&bill_source=Government,Private%20Member&date_start=${date_start}&date_end=${date_end}&limit=${result_limit}&chamber_id=${chamber_id}&lang=${language}`;\n  }\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withRoot from \"./withRoot\";\nimport OnboardingComponent from \"./OnboardingComponent/OnboardingComponent\";\nimport ListComponent from \"./ListComponent/ListComponent\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport Oireachtas from \"./OireachtasService/oireachtas\";\nimport Bill from \"./OireachtasService/interfaces/iBill\";\nimport logger from \"./logger/winston\";\nimport CastVoteModalComponent from \"./CastVoteModalComponent/CastVoteModalComponent\";\nimport BlockchainService from \"./BlockchainService/blockchainService\";\n\n/**\n * Main page. Outlines what this website is for and contains the sub modules for voting and onboarding.\n */\ninterface Props {}\ninterface State {\n  castVoteModalOpen: boolean;\n  bills: Bill[];\n  billToVoteOn: Bill | undefined;\n  inFavour: boolean;\n}\nclass App extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      castVoteModalOpen: false,\n      bills: [],\n      billToVoteOn: undefined,\n      inFavour: false\n    };\n  }\n\n  /**\n   * Instansiates an Oireachtas service object, calls the oireachtas API, then updates the Bills in state accordingly.\n   */\n  async updateBills() {\n    return new Promise(function(resolve, reject) {\n      const oireachtasService = new Oireachtas();\n\n      // Calculate the date 7 days ago, then the date 14 days ahead of now for getting bills.\n      const date = new Date();\n      const resultLimit = \"50\";\n      const billState = \"Current\";\n      const date7DaysAgo = new Date(date.getTime() - 7 * 24 * 60 * 60 * 1000);\n      const date7DaysAgoString = date7DaysAgo.toISOString().substring(0, 10);\n      const date14DaysFromNow = new Date(\n        date.getTime() + 14 * 24 * 60 * 60 * 1000\n      );\n      const date14DaysFromNowString = date14DaysFromNow\n        .toISOString()\n        .substring(0, 10);\n      const billsApiRequestUrl: string = oireachtasService.prepareDailBillsRequestUrl(\n        billState,\n        date7DaysAgoString,\n        date14DaysFromNowString,\n        resultLimit,\n        \"\",\n        \"ga\"\n      );\n\n      // Get Dail Bills\n      const newBills = oireachtasService\n        .getDailBills(billsApiRequestUrl)\n        .then(response => {\n          // If there are bills returned in this response, map them to Bill Objects then return the list of them.\n          if (response.results) {\n            logger.info(\n              `${\n                response.results.length\n              } results returned from api.oireachtas.ie`\n            );\n            return response.results.map(function(result) {\n              return result.bill;\n            });\n          } else {\n            logger.warn(`api.oireachtas.ie returned no results for voting on.`);\n            return;\n          }\n        })\n        .catch(error => {\n          logger.error(\n            \"Error thrown while trying to retrieve bills from the oireachtas api. \"\n          );\n          reject(error);\n        });\n      resolve(newBills);\n    });\n  }\n\n  /**\n   * This function is passed down to a Bill Component. When called it is passed the Bill interface and a boolean, true meaning voting in favour\n   * @param bill\n   * @param vote\n   */\n  triggerCastVoteModal(bill: Bill, vote: boolean) {\n    this.setState({\n      ...this.state,\n      castVoteModalOpen: true,\n      billToVoteOn: bill,\n      inFavour: vote\n    });\n  }\n\n  handleClose = (event: any, reason: any) => {\n    this.setState({\n      ...this.state,\n      castVoteModalOpen: false\n    });\n  };\n\n  // Function to cast a vote to the blockchain.\n  castVote = (bill: Bill, inFavour: boolean, name?: string, email?: string) => {\n    logger.info(\n      `Casting Vote. BillTitle: ${\n        bill.shortTitleEn\n      }, inFavour: ${inFavour}, name:${name}, email: ${email}`\n    );\n    const blockchainService = new BlockchainService(null);\n    blockchainService\n      .castVote(bill.uri, inFavour)\n      .then(castVoteResponse => {\n        logger.info(\"CastVote() resolved to:  \");\n        console.log(castVoteResponse);\n      })\n      .catch(err => {\n        logger.error(\n          \"Error thrown getting web3 and sending a vote transaction. \"\n        );\n        logger.error(err);\n      });\n\n    this.setState({\n      ...this.state,\n      castVoteModalOpen: false\n    });\n  };\n\n  isWeb3User = (): boolean => {\n    return BlockchainService.isWeb3Injected();\n  };\n\n  handleClick = () => {\n    this.setState({ ...this.state, castVoteModalOpen: true });\n  };\n\n  render() {\n    return (\n      <div className={\"centerColumn\"}>\n        <CastVoteModalComponent\n          open={this.state.castVoteModalOpen}\n          handleClose={this.handleClose}\n          bill={this.state.billToVoteOn}\n          inFavour={this.state.inFavour}\n          castVote={this.castVote}\n        />\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Paper className={\"paper\"}>\n              <Typography variant=\"h3\" gutterBottom>\n                Have your say on Bills in the Oireachtas\n              </Typography>\n              <Typography variant=\"body1\" gutterBottom>\n                Through the use of the{\" \"}\n                <a href=\"https://api.oireachtas.ie/\">\n                  Oireachtas Open Data API\n                </a>\n                ; this website allows you to vote on current Dáil &amp; Seanad\n                legislation, and record that vote permanently to the Ethereum\n                Blockchain.\n              </Typography>\n              <Typography variant=\"body1\" gutterBottom>\n                Citizens vote allows for any citizen to build up a voting record\n                that they <em>cannot</em> change. This allows first time\n                candidates for elected office to be compared against incumbent\n                candidates <i>vote for vote</i>. How do the two measure up on\n                climate change bills? How do the incumbent and challenger\n                compare on tax bills? Abortion rights? Any contentious bill a\n                voter wants to look at, if the challenger has been commiting\n                their votes to the blockchain, a voter can trust that the\n                candidate could not have changed that vote since the time it was\n                cast. They can now fairly compare how the challenger voted and\n                how the incumbent voted in the Dáil. Rather than relying on what\n                candidates say they are going to do during the election cycle.\n              </Typography>\n            </Paper>\n          </Grid>\n          {this.isWeb3User() ? (\n            <div />\n          ) : (\n            <Grid item xs={12}>\n              <Paper className={\"paper\"}>\n                <OnboardingComponent web3Injected={this.isWeb3User()} />\n              </Paper>\n            </Grid>\n          )}\n\n          <Grid item xs={12}>\n            <Paper className={\"paper\"}>\n              <ListComponent\n                updateBills={this.updateBills}\n                triggerVoteCast={this.triggerCastVoteModal.bind(this)}\n              />\n            </Paper>\n          </Grid>\n\n          <Grid item xs={12}>\n            {/* Identifying myself and donation address */}\n            <Paper className={\"paper\"}>\n              <Typography variant=\"caption\">\n                Built by Oisín Kyne. To donate some Ether:{\" \"}\n                <a\n                  href=\"https://etherscan.io/address/0xa338096d43efFc151E7e89519b524CA5a7E5626f\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  oisinkyne.eth\n                </a>\n              </Typography>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRoot(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}