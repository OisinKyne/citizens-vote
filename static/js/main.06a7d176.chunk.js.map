{"version":3,"sources":["static/ethereum-metamask-chrome.png","withRoot.js","OnboardingComponent/OnboardingComponent.tsx","BillComponent/BillComponent.tsx","ListComponent/ListComponent.tsx","OireachtasService/oireachtas.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","theme","createMuiTheme","palette","primary","light","purple","main","dark","secondary","green","typography","useNextVariants","withRoot","Component","props","react_default","a","createElement","MuiThemeProvider","CssBaseline","OnboardingComponent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","open","web3Injected","console","log","className","Grid","container","spacing","alignContent","item","xs","href","target","src","MetaMaskLogo","Typography","variant","gutterBottom","React","BillComponent","Paper","justify","alignItems","bill","shortTitleEn","longTitleEn","ThumbUp","ThumbDown","ListComponent","billItems","updateBills","then","bills","map","index","src_BillComponent_BillComponent","key","setState","objectSpread","length","direction","Oireachtas","url","Promise","resolve","reject","require","rp","htmlString","JSON","parse","catch","error","bill_status","arguments","undefined","date_start","date_end","result_limit","chamber_id","language","concat","App","handleClose","castVoteModalOpen","handleClick","oireachtasService","billsApiRequestUrl","prepareDailBillsRequestUrl","getDailBills","response","results","result","src_OnboardingComponent_OnboardingComponent","src_ListComponent_ListComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8bCQlCC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,MAAOC,IAAO,KACdC,KAAMD,IAAO,KACbE,KAAMF,IAAO,MAEfG,UAAW,CACTJ,MAAOK,IAAM,KACbH,KAAMG,IAAM,KACZF,KAAME,IAAM,OAGhBC,WAAY,CACVC,iBAAiB,KAoBNC,MAhBf,SAAkBC,GAahB,OAZA,SAAkBC,GAGhB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkBlB,MAAOA,GAEvBe,EAAAC,EAAAC,cAACE,EAAA,EAAD,MACAJ,EAAAC,EAAAC,cAACJ,EAAcC,iCCiBRF,gBA3Cb,SAAAQ,EAAYN,GAAY,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACtBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMV,KAHRc,MAAQ,CAAEC,MAAM,IAKa,IAAvBf,EAAMgB,eACRC,QAAQC,IAAI,iDACZX,EAAKO,MAAQ,CAAEC,MAAM,IALDR,wEAUtB,OAAwB,IAApBG,KAAKI,MAAMC,KACN,KAGPd,EAAAC,EAAAC,cAAA,OAAKgB,UAAW,iBACdlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,aAAc,UACxCtB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACbxB,EAAAC,EAAAC,cAAA,KACEuB,KAAK,uBACLC,OAAO,SACPR,UAAW,eAEXlB,EAAAC,EAAAC,cAAA,OAAKyB,IAAKC,QAGd5B,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACbxB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,GAAxC,gFAEmB,IACjB/B,EAAAC,EAAAC,cAAA,KAAGuB,KAAK,uBAAuBC,OAAO,UAAtC,YAHF,iMA7BsBM,IAAMlC,uCCgDzBmC,mLA/BX,OACEjC,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACbxB,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAOhB,UAAW,aAChBlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,WAAS,EAACe,QAAQ,gBAAgBC,WAAW,UACjDpC,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACbxB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAYC,QAAQ,MACjBrB,KAAKV,MAAMsC,KAAKC,cAEnBtC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAYC,QAAQ,SACjBrB,KAAKV,MAAMsC,KAAKE,cAGrBvC,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACbxB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,WAAS,EAACe,QAAQ,eAAeC,WAAW,UAChDpC,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMI,MAAI,GACRvB,EAAAC,EAAAC,cAACsC,EAAA,EAAD,MACAxC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,eAEF7B,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMI,MAAI,GACRvB,EAAAC,EAAAC,cAACuC,EAAA,EAAD,MACAzC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,4BAtBUG,IAAMlC,WCwBnB4C,cA7Bb,SAAAA,EAAY3C,GAAY,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiC,IACtBpC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmC,GAAA9B,KAAAH,KAAMV,KAHR4C,UAAiB,GAKfrC,EAAKP,MAAM6C,cAAcC,KAAK,SAACC,GACzBA,EAAMC,MACRzC,EAAKqC,UAAYG,EAAMC,IAAI,SAACV,EAAYW,GAAb,OACzBhD,EAAAC,EAAAC,cAAC+C,EAAD,CAAeZ,KAAMA,EAAMa,IAAKF,OAGpC1C,EAAK6C,SAAL5C,OAAA6C,EAAA,EAAA7C,CAAA,GAAmBD,EAAKO,MAAxB,CAA+BiC,aATXxC,wEActB,OACEN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAClCtB,KAAKkC,UAAYlC,KAAKkC,UAAUU,OAAS,EAD5C,kBAGArD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,WAAW,EAAMkC,UAAU,SAASjC,QAAS,GAChDZ,KAAKkC,oBAzBUX,IAAMlC,WCTbyD,uGAQCC,GAClB,OAAO,IAAIC,QAAQ,SAASC,EAASC,GAC1BC,EAAQ,IACjBC,CAAGL,GACAX,KAAK,SAACiB,GACLJ,EAAQK,KAAKC,MAAMF,MAEpBG,MAAM,SAACC,GACNP,EAAOO,4DAYb,IANAC,EAMAC,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GANc,UACdE,EAKAF,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GALa,aACbG,EAIAH,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAJW,aACXI,EAGAJ,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAHe,KACfK,EAEAL,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAFa,GACbM,EACAN,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GADW,KAEX,8DAAAO,OAA+DR,EAA/D,wDAAAQ,OAAiIL,EAAjI,cAAAK,OAAwJJ,EAAxJ,WAAAI,OAA0KH,EAA1K,gBAAAG,OAAqMF,EAArM,UAAAE,OAAwND,YC2G7M7E,gBAxHb,SAAA+E,EAAY7E,GAAY,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmE,IACtBtE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqE,GAAAhE,KAAAH,KAAMV,KAsCR8E,YAAc,WACZvE,EAAK6C,SAAL5C,OAAA6C,EAAA,EAAA7C,CAAA,GACKD,EAAKO,MADV,CAEEiE,mBAAmB,MA1CCxE,EA8CxByE,YAAc,WACZzE,EAAK6C,SAAL5C,OAAA6C,EAAA,EAAA7C,CAAA,GAAmBD,EAAKO,MAAxB,CAA+BiE,mBAAmB,MA7ClDxE,EAAKO,MAAQ,CACXiE,mBAAmB,EACnBhC,MAAO,IAJaxC,8MAWf,IAAImD,QAAQ,SAASC,EAASC,GACnC,IAAMqB,EAAoB,IAAIzB,EACxB0B,EAA6BD,EAAkBE,6BAsBrDxB,EAnBiBsB,EACdG,aAAaF,GACbpC,KAAK,SAAAuC,GAEJ,OAAIA,EAASC,QACJD,EAASC,QAAQtC,IAAI,SAASuC,GACnC,OAAOA,EAAOjD,YAGhBrB,QAAQC,IAAR,0DAIHgD,MAAM,SAAAC,GACLlD,QAAQC,IACN,yEAEF0C,EAAOO,uIAkBb,OACElE,EAAAC,EAAAC,cAAA,OAAKgB,UAAW,gBAcdlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvBrB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACbxB,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAOhB,UAAW,SAChBlB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,oCAGA/B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,GAAxC,yBACyB,IACvB/B,EAAAC,EAAAC,cAAA,KAAGuB,KAAK,8BAAR,4BAFF,kIAQAzB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,GAAxC,8EAEY/B,EAAAC,EAAAC,cAAA,oBAFZ,6GAIaF,EAAAC,EAAAC,cAAA,0BAJb,ohBAcAF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,yUAUJ/B,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACbxB,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAOhB,UAAW,SAChBlB,EAAAC,EAAAC,cAACqF,EAAD,CAAqBxE,cAAc,MAGvCf,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACbxB,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAOhB,UAAW,SAChBlB,EAAAC,EAAAC,cAACsF,EAAD,CAAe5C,YAAanC,KAAKmC,yBAhH7BZ,IAAMlC,YCLJ2F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/F,EAAAC,EAAAC,cAAC8F,EAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxD,KAAK,SAAAyD,GACjCA,EAAaC","file":"static/js/main.06a7d176.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ethereum-metamask-chrome.79226bac.png\";","import React from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport green from \"@material-ui/core/colors/green\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700]\n    },\n    secondary: {\n      light: green[300],\n      main: green[500],\n      dark: green[700]\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;\n","import React from \"react\";\nimport withRoot from \"../withRoot\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport MetaMaskLogo from \"../static/ethereum-metamask-chrome.png\";\n\nclass OnboardingComponent extends React.Component {\n  state = { open: true };\n\n  constructor(props: any) {\n    super(props);\n\n    if (props.web3Injected === true) {\n      console.log(\"Web3 is injected into this Onboarding object.\");\n      this.state = { open: false };\n    }\n  }\n\n  render() {\n    if (this.state.open === false) {\n      return null;\n    }\n    return (\n      <div className={\"onboardingDiv\"}>\n        <Grid container spacing={3} alignContent={\"center\"}>\n          <Grid item xs={12}>\n            <a\n              href=\"https://metamask.io/\"\n              target=\"_blank\"\n              className={\"metamaskUrl\"}\n            >\n              <img src={MetaMaskLogo} />\n            </a>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"body1\" gutterBottom>\n              This application connects to the Blockchain through a Chrome\n              Extension called{\" \"}\n              <a href=\"https://metamask.io/\" target=\"_blank\">\n                Metamask\n              </a>\n              . This means this website has no control over your vote, it merely\n              facilitates the process. Please install Metamask, or any other\n              web3 provider to post messages to the blockchain.\n            </Typography>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRoot(OnboardingComponent);\n","import React from \"react\";\nimport Bill from \"../OireachtasService/interfaces/iBill\";\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\nimport {\n  DoneOutline,\n  ClearOutlined,\n  ThumbUp,\n  ThumbDown\n} from \"@material-ui/icons\";\n\ninterface Props {\n  key: number;\n  bill: Bill;\n}\ninterface State {\n  bill: Bill;\n}\n/**\n * Component to render a passed Bill interface conforming JSON object to a React Component with buttons for voting for and against bills.\n */\nclass BillComponent extends React.Component<Props, State> {\n  render() {\n    return (\n      <Grid item xs={12}>\n        <Paper className={\"billPaper\"}>\n          <Grid container justify=\"space-between\" alignItems=\"center\">\n            <Grid item xs={10}>\n              <Typography variant=\"h6\">\n                {this.props.bill.shortTitleEn}\n              </Typography>\n              <Typography variant=\"body1\">\n                {this.props.bill.longTitleEn}\n              </Typography>\n            </Grid>\n            <Grid item xs={2}>\n              <Grid container justify=\"space-around\" alignItems=\"center\">\n                <Grid item>\n                  <ThumbUp />\n                  <Typography>Tá</Typography>\n                </Grid>\n                <Grid item>\n                  <ThumbDown />\n                  <Typography>Níl</Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    );\n  }\n}\n\nexport default BillComponent;\n","import React from \"react\";\nimport Bill from \"../OireachtasService/interfaces/iBill\";\nimport BillComponent from \"../BillComponent/BillComponent\";\nimport { Grid, Typography } from \"@material-ui/core\";\n\ninterface Props {\n  updateBills: Function;\n}\ninterface State {\n  bills: Bill[];\n}\nclass ListComponent extends React.Component<Props, State> {\n  // React element BillComponents outputted from a map.\n  billItems: any = [];\n\n  constructor(props: any) {\n    super(props);\n\n    this.props.updateBills().then((bills: Bill[]) => {\n      if (bills.map) {\n        this.billItems = bills.map((bill: Bill, index: number) => (\n          <BillComponent bill={bill} key={index} />\n        ));\n      }\n      this.setState({ ...this.state, bills });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Typography variant=\"h4\" gutterBottom>\n          {this.billItems ? this.billItems.length : 0} Dáil Bills\n        </Typography>\n        <div>\n          <Grid container={true} direction=\"column\" spacing={3}>\n            {this.billItems}\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ListComponent;\n","import APIResponse from \"./interfaces/iAPIResponse\";\n\nexport default class Oireachtas {\n  /**\n   * Get the current bills in the Dail.\n   *\n   * url: The formulated API request for api.oireachtas.ie\n   *\n   * Returns a promise that resolves to the request body as text. Rejects if there is an error.\n   */\n  public getDailBills(url: string): Promise<APIResponse> {\n    return new Promise(function(resolve, reject) {\n      var rp = require(\"request-promise-native\");\n      rp(url)\n        .then((htmlString: string) => {\n          resolve(JSON.parse(htmlString));\n        })\n        .catch((error: any) => {\n          reject(error);\n        });\n    });\n  }\n\n  public prepareDailBillsRequestUrl(\n    bill_status = \"Current\",\n    date_start = \"2019-05-01\",\n    date_end = \"2019-06-08\",\n    result_limit = \"50\",\n    chamber_id = \"\",\n    language = \"en\"\n  ) {\n    return `https://api.oireachtas.ie/v1/legislation?bill_status=${bill_status}&bill_source=Government,Private%20Member&date_start=${date_start}&date_end=${date_end}&limit=${result_limit}&chamber_id=${chamber_id}&lang=${language}`;\n  }\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withRoot from \"./withRoot\";\nimport OnboardingComponent from \"./OnboardingComponent/OnboardingComponent\";\nimport ListComponent from \"./ListComponent/ListComponent\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport Oireachtas from \"./OireachtasService/oireachtas\";\nimport Bill from \"./OireachtasService/interfaces/iBill\";\n\n/**\n * Main page. Outlines what this website is for and contains the sub modules for voting and onboarding.\n */\ninterface Props {}\ninterface State {\n  castVoteModalOpen: boolean;\n  bills: Bill[];\n}\nclass App extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      castVoteModalOpen: false,\n      bills: []\n    };\n  }\n  /**\n   * Instansiates an Oireachtas service object, calls the oireachtas API, then updates the Bills in state accordingly.\n   */\n  async updateBills() {\n    return new Promise(function(resolve, reject) {\n      const oireachtasService = new Oireachtas();\n      const billsApiRequestUrl: string = oireachtasService.prepareDailBillsRequestUrl();\n\n      // Get Dail Bills\n      const newBills = oireachtasService\n        .getDailBills(billsApiRequestUrl)\n        .then(response => {\n          // If there are bills returned in this response, map them to Bill Objects then return the list of them.\n          if (response.results) {\n            return response.results.map(function(result) {\n              return result.bill;\n            });\n          } else {\n            console.log(`api.oireachtas.ie returned no results for voting on.`);\n            return;\n          }\n        })\n        .catch(error => {\n          console.log(\n            \"Error thrown while trying to retrieve bills from the oireachtas api. \"\n          );\n          reject(error);\n        });\n      resolve(newBills);\n    });\n  }\n\n  handleClose = () => {\n    this.setState({\n      ...this.state,\n      castVoteModalOpen: false\n    });\n  };\n\n  handleClick = () => {\n    this.setState({ ...this.state, castVoteModalOpen: true });\n  };\n\n  render() {\n    return (\n      <div className={\"centerColumn\"}>\n        {/* Dialog action to be replaced by Cast Vote Modal */}\n        {/* <Dialog open={open} onClose={this.handleClose}>\n          <DialogTitle>Super Secret Password</DialogTitle>\n          <DialogContent>\n            <DialogContentText>1-2-3-4-5</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={this.handleClose}>\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog> */}\n\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Paper className={\"paper\"}>\n              <Typography variant=\"h2\" gutterBottom>\n                Data Driven Democracy in Ireland\n              </Typography>\n              <Typography variant=\"body1\" gutterBottom>\n                Through the use of the{\" \"}\n                <a href=\"https://api.oireachtas.ie/\">\n                  Oireachtas Open Data API\n                </a>\n                ; this website allows you to vote on current Dáil legislation,\n                and record that vote permanently to the Ethereum Blockchain.\n              </Typography>\n              <Typography variant=\"body1\" gutterBottom>\n                Citizens vote allows for any citizen to build up a voting record\n                that they <em>cannot</em> change. This allows first time\n                candidates for elected office to be compared against incumbent\n                candidates <i>vote for vote</i>. How do the two measure up on\n                climate change bills? How do the incumbent and challenger\n                compare on tax bills? Abortion rights? Any contentious bill a\n                voter wants to look at, if the challenger has been commiting\n                their votes to the blockchain, a voter can trust that the\n                candidate could not have changed that vote since the time it was\n                cast. They can now fairly compare how the challenger voted and\n                how the incumbent voted in the Dáil. Rather than relying on what\n                candidates say they are going to do during the election cycle.\n              </Typography>\n              <Typography variant=\"h6\" gutterBottom>\n                It's time for informed voters to stop looking at what elected\n                officials say, and to start looking at how they are voting. This\n                project isn't a fully fledged application to do all that this\n                entails. But it is a step in the right direction, helping\n                Ireland take steps to becoming a more accountable and\n                transparent Democracy.\n              </Typography>\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper className={\"paper\"}>\n              <OnboardingComponent web3Injected={false} />\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper className={\"paper\"}>\n              <ListComponent updateBills={this.updateBills} />\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRoot(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}